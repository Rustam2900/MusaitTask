# Generated by Django 4.2 on 2024-12-19 22:49

import bot.models
import bot.validators
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('telegram_id', models.BigIntegerField(unique=True)),
                ('create_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('full_name', models.CharField(blank=True, max_length=255, verbose_name='full name')),
                ('full_name_uz', models.CharField(blank=True, max_length=255, null=True, verbose_name='full name')),
                ('full_name_ru', models.CharField(blank=True, max_length=255, null=True, verbose_name='full name')),
                ('username', models.CharField(blank=True, max_length=255, null=True, verbose_name='username')),
                ('username_uz', models.CharField(blank=True, max_length=255, null=True, verbose_name='username')),
                ('username_ru', models.CharField(blank=True, max_length=255, null=True, verbose_name='username')),
                ('phone_number', models.CharField(blank=True, max_length=20, unique=True, validators=[bot.validators.phone_number_validator], verbose_name='phone number')),
                ('telegram_id', models.CharField(blank=True, max_length=255, null=True, unique=True, verbose_name='telegram id')),
                ('tg_username', models.CharField(blank=True, max_length=255, null=True, unique=True, verbose_name='telegram username')),
                ('password', models.CharField(blank=True, max_length=255, verbose_name='password')),
                ('create_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
            managers=[
                ('objects', bot.models.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Reminder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='title')),
                ('title_uz', models.CharField(max_length=255, null=True, verbose_name='title')),
                ('title_ru', models.CharField(max_length=255, null=True, verbose_name='title')),
                ('content', models.TextField(verbose_name='content')),
                ('content_uz', models.TextField(null=True, verbose_name='content')),
                ('content_ru', models.TextField(null=True, verbose_name='content')),
                ('date', models.DateTimeField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed')], default='pending', max_length=20)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Reminder',
                'verbose_name_plural': 'Reminders',
                'ordering': ['-date'],
            },
        ),
    ]
